// Comprehensive Nebula Parser Test File

namespace Com.MyCompany.App {
    class MyUtility {
        public static void printLine(String message) {
            // Placeholder for System.Console.WriteLine
        }
    }
}

namespace MyAwesomeApp
{
    class Main
    {
        public static void main()
        {
            // ALL your variable declarations, assignments, if/else,
            // while, for loops, and the return statement should go here:

            int number = 123;
            bool status = true;
            String message = "Hello, parser!";
            double pi = 3.14159;
            var dynamicValue = "I'm dynamic"; // Using 'var' keyword

            number = 456;
            message = "Updated message";
            pi *= 2.718;

            bool invertedStatus = !status; // Logical NOT
            int negativeNumber = -number;  // Negation

            int sum = 5 + 7;
            bool areEqual = (sum == 12);
            int difference = number - sum;
            bool greaterThan = (sum > 10);
            bool lessOrEqual = (difference <= 0);

            if (invertedStatus && greaterThan)
            {
                Com.MyCompany.App.MyUtility.printLine("Condition 1 met!");
            }
            else if (status || lessOrEqual)
            {
                Com.MyCompany.App.MyUtility.printLine("Condition 2 met!");
            }
            else
            {
                Com.MyCompany.App.MyUtility.printLine("No conditions met.");
            }

            int counter = 0;
            while (counter < 3)
            {
                Com.MyCompany.App.MyUtility.printLine("While loop iteration: " + counter);
                counter = counter + 1; // Assignment within loop
            }

            for (int i = 0; i < 5; i = i + 1)
            {
                Com.MyCompany.App.MyUtility.printLine("For loop iteration: " + i);
            }

            for (counter = 0; counter < 2; counter++)
            {
                Com.MyCompany.App.MyUtility.printLine("Simplified for loop: " + counter);
            }

            return; // Return statement
        }
    }

    // A dummy class to test 'new MyClass()'
    class MyClass
    {
        public MyClass()
        {
            // Constructor
        }
    }
}
